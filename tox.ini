[tox]
envlist =
    py{37,38,39}-test{,-alldeps,-devdeps}{,-cov}
    py{37,38,39}-test-numpy{117,118,119,120}
    py{37,38,39}-test-astropy{40,lts}
    build_docs
    linkcheck
    codestyle
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
isolated_build = true

[testenv]
# Suppress display of matplotlib plots generated during docs build
setenv =
    MPLBACKEND=agg
    devdeps: PIP_EXTRA_INDEX_URL = https://pypi.anaconda.org/scientific-python-nightly-wheels/simple

# Pass through the following environment variables which may be needed
# for the CI
passenv = HOME,WINDIR,LC_ALL,LC_CTYPE,CC,CI

# Run the tests in a temporary directory to make sure that we don't import
# this package from the source tree
changedir = .tmp/{envname}

# tox environments are constructed with so-called 'factors' (or terms)
# separated by hyphens, e.g., test-devdeps-cov. Lines below starting
# with factor: will only take effect if that factor is included in the
# environment name. To see a list of example environments that can be run,
# along with a description, run:
#
#     tox -l -v
#
description =
    run tests
    alldeps: with all optional dependencies
    devdeps: with the latest developer version of key dependencies
    oldestdeps: with the oldest supported version of key dependencies
    cov: and test coverage
    numpy116: with numpy 1.16.*
    numpy117: with numpy 1.17.*
    numpy118: with numpy 1.18.*
    numpy119: with numpy 1.19.*
    numpy120: with numpy 1.20.*
    astropy40: with astropy 4.0.*
    astropylts: with the latest astropy LTS

# The following provides some specific pinnings for key packages
deps =
    numpy117: numpy==1.17.*
    numpy118: numpy==1.18.*
    numpy119: numpy==1.19.*
    numpy120: numpy==1.20.*

    astropy40: astropy==4.0.*
    astropylts: astropy==4.0.*

    devdeps: numpy>=0.0.dev0

# The following indicates which extras_require from setup.cfg will be installed
extras =
    test
    alldeps: all

commands =
    devdeps: pip install -U -i https://pypi.anaconda.org/astropy/simple astropy --pre
    pip freeze

    pytest --pyargs astro3d {toxinidir}/docs \
    cov: --cov astro3d --cov-config={toxinidir}/setup.cfg --cov-report xml:{toxinidir}/coverage.xml \
    {posargs}

[testenv:build_docs]
changedir = docs
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b html . _build/html

[testenv:linkcheck]
changedir = docs
description = check the links in the HTML docs
extras = docs
commands =
    pip freeze
    sphinx-build -W -b linkcheck . _build/html

[testenv:codestyle]
skip_install = true
changedir = .
description = check code style with flake8
deps = flake8
commands = flake8 astro3d --count --max-line-length=100
